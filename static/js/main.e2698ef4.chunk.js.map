{"version":3,"sources":["../external \"Cesium\"","routes/index.js","routes/headerRoute.js","components/layouts/header.js","components/deckGl/test.js","components/deckGl/hexagonLayer.js","components/resium/camera.js","routes/deckRoute.js","components/layouts/left.js","containers/pageContainer.js","components/main.js","store/modules/test.js","store/modules/index.js","store/sagas/test.js","store/sagas/index.js","store/configure.js","store/index.js","index.js"],"names":["module","exports","Cesium","headerRoutes","path","param","name","Header","routes","className","Array","isArray","map","route","idx","activeClassName","to","key","href","initialViewState","longitude","latitude","zoom","pitch","bearing","data","sourcePosition","targetPosition","DeckTest","layers","LineLayer","id","console","log","controller","mapboxApiAccessToken","ambientLight","AmbientLight","color","intensity","pointLight1","PointLight","position","pointLight2","lightingEffect","LightingEffect","material","ambient","diffuse","shininess","specularColor","INITIAL_VIEW_STATE","minZoom","maxZoom","colorRange","elevationScale","HexagonLayerCom","props","state","this","radius","upperPercentile","coverage","HexagonLayer","elevationRange","length","extruded","getPosition","d","onHover","pickable","Boolean","transitions","require","csv","error","response","Number","lng","lat","setState","mapStyle","_renderLayers","effects","reuseMaps","preventStyleDiffing","Component","connect","Camera1","Cartesian3","fromDegrees","full","onChange","areaPercentage","duration","destination","point","pixelSize","description","deckRoutes","deckGL","component","resium","Left","PageContainer","match","params","split","deckGlRoutes","findComponent","find","style","zIndex","Main","renderHeaderRoutes","handleActions","createAction","payload","action","combineReducers","test","sagaTest","take","fork","rootSagas","all","configure","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","modules","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2698ef4.chunk.js","sourcesContent":["module.exports = Cesium;","import headerRoutes from './headerRoute'\r\n\r\nexport default headerRoutes\r\n","\r\nconst headerRoutes =  [\r\n\r\n\r\n    {\r\n        path: '/deckGL/:param',\r\n        param: '/deckGL/lineLayer',\r\n        name: 'DeckGL'\r\n    },\r\n    {\r\n        path: '/resium/:param',\r\n        param: '/resium/basic',\r\n        name: 'RESIUM'\r\n    },\r\n    {\r\n        path: '/3/:param',\r\n        param: '/3',\r\n        name: '3'\r\n    },\r\n    {\r\n        path: '/4',\r\n        name: '4'\r\n    },\r\n\r\n]\r\n\r\nexport default headerRoutes\r\n\r\n\r\n","import React from \"react\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = ({routes}) => {\r\n\r\n\r\n    return (\r\n\r\n        <header>\r\n            <div className='bg'/>\r\n            <div className='links'>\r\n                {Array.isArray(routes) && routes.map((route, idx) => (\r\n                    <NavLink activeClassName='active' to={route.param? route.param: route.path} key={`key_${idx}`}>{route.name}</NavLink>\r\n                ))}\r\n                <a href='https://fenrird.github.io/'>\r\n                    Github<i className=\"icon icon-github\" />\r\n                </a>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\nimport DeckGL from '@deck.gl/react'\r\nimport {LineLayer} from \"@deck.gl/layers\"\r\nimport {StaticMap} from 'react-map-gl'\r\n\r\nconst MAPBOX_ACCESS_TOKEN  = 'pk.eyJ1IjoiZmVucmlyZCIsImEiOiJjazkyYmQyNDkwNTE2M2dtcWo2NnR3b3dwIn0.nJ2E-tzVsVobzzYKtcKfDg'\r\n\r\nconst initialViewState  = {\r\n    longitude: 127.41669,\r\n    latitude: 37.7853,\r\n    zoom: 13,\r\n    pitch: 0,\r\n    bearing: 0\r\n};\r\n\r\n// Data to be used by the LineLayer\r\nconst data = [\r\n    {sourcePosition: [127.41669, 37.7853], targetPosition: [127.41669, 37.781]},\r\n    {sourcePosition: [127.41669, 37.7853], targetPosition: [127.41669, 37.781]},\r\n    {sourcePosition: [127.41669, 37.7853], targetPosition: [127.41669, 37.781]},\r\n    {sourcePosition: [127.41669, 37.7853], targetPosition: [127.41669, 37.781]},\r\n    {sourcePosition: [127.41669, 37.7853], targetPosition: [127.41669, 37.781]},\r\n    {sourcePosition: [127.41669, 37.7853], targetPosition: [127.41669, 37.781]},\r\n\r\n    ];\r\n\r\nconst DeckTest = () => {\r\n    const layers  = [\r\n        new LineLayer({\r\n            id: 'line-layer',\r\n            data,\r\n        })\r\n    ]\r\n    console.log(layers)\r\n    return (\r\n        <div>\r\n            <DeckGL\r\n                initialViewState={initialViewState }\r\n                layers={layers}\r\n                controller={true}>\r\n                <StaticMap mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN} />\r\n            </DeckGL>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DeckTest\r\n","import React, {Component} from 'react';\r\nimport {StaticMap} from 'react-map-gl';\r\nimport {AmbientLight, PointLight, LightingEffect} from '@deck.gl/core';\r\nimport {HexagonLayer} from '@deck.gl/aggregation-layers';\r\nimport DeckGL from '@deck.gl/react';\r\nimport {connect} from 'react-redux'\r\n\r\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoiZmVucmlyZCIsImEiOiJjazkyYmQyNDkwNTE2M2dtcWo2NnR3b3dwIn0.nJ2E-tzVsVobzzYKtcKfDg'\r\n\r\nconst ambientLight = new AmbientLight({\r\n    color: [255, 255, 255],\r\n    intensity: 1.0\r\n});\r\n\r\nconst pointLight1 = new PointLight({\r\n    color: [255, 255, 255],\r\n    intensity: 0.8,\r\n    position: [-0.144528, 49.739968, 80000]\r\n});\r\n\r\nconst pointLight2 = new PointLight({\r\n    color: [255, 255, 255],\r\n    intensity: 0.8,\r\n    position: [-3.807751, 54.104682, 8000]\r\n});\r\n\r\nconst lightingEffect = new LightingEffect({ambientLight, pointLight1, pointLight2});\r\n\r\nconst material = {\r\n    ambient: 0.64,\r\n    diffuse: 0.6,\r\n    shininess: 32,\r\n    specularColor: [51, 51, 51]\r\n};\r\n\r\nconst INITIAL_VIEW_STATE = {\r\n    longitude: -1.4157267858730052,\r\n    latitude: 52.232395363869415,\r\n    zoom: 6.6,\r\n    minZoom: 5,\r\n    maxZoom: 15,\r\n    pitch: 40.5,\r\n    bearing: -27.396674584323023\r\n};\r\n\r\nconst colorRange = [\r\n    [1, 152, 189],\r\n    [73, 227, 206],\r\n    [216, 254, 181],\r\n    [254, 237, 177],\r\n    [254, 173, 84],\r\n    [209, 55, 78]\r\n];\r\n\r\nconst elevationScale = {min: 1, max: 50};\r\n\r\n\r\nclass HexagonLayerCom extends Component {\r\n    static get defaultColorRange() {\r\n        return colorRange;\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            elevationScale: elevationScale.min\r\n        };\r\n    }\r\n\r\n    _renderLayers() {\r\n        const {radius = 1000, upperPercentile = 100, coverage = 1} = this.props;\r\n        const data = this.state.data\r\n\r\n        return [\r\n            new HexagonLayer({\r\n                id: 'heatmap',\r\n                colorRange,\r\n                coverage,\r\n                data,\r\n                elevationRange: [0, 3000],\r\n                elevationScale: data && data.length ? 50 : 0,\r\n                extruded: true,\r\n                getPosition: d => d,\r\n                onHover: this.props.onHover,\r\n                pickable: Boolean(this.props.onHover),\r\n                radius,\r\n                upperPercentile,\r\n                material,\r\n\r\n                transitions: {\r\n                    elevationScale: 3000\r\n                }\r\n            })\r\n        ];\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        console.log('componentDidMount')\r\n\r\n        const DATA_URL = 'https://raw.githubusercontent.com/uber-common/deck.gl-data/master/examples/3d-heatmap/heatmap-data.csv'\r\n        const data = require('d3-request').csv(DATA_URL, (error, response) => {\r\n            if (!error) {\r\n                const data = response.map(d => [Number(d.lng), Number(d.lat)]);\r\n                this.setState({\r\n                    data:data\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state)\r\n        const {mapStyle = 'mapbox://styles/mapbox/dark-v9'} = this.props;\r\n        return (\r\n            <div>\r\n            <DeckGL\r\n                layers={this._renderLayers()}\r\n                effects={[lightingEffect]}\r\n                initialViewState={INITIAL_VIEW_STATE}\r\n                controller={true}\r\n            >\r\n                <StaticMap\r\n                    reuseMaps\r\n                    preventStyleDiffing={true}\r\n                    mapboxApiAccessToken={MAPBOX_TOKEN}\r\n                    mapStyle={mapStyle}\r\n                />\r\n            </DeckGL>\r\n                </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default connect()(HexagonLayerCom)\r\n","import React, { Component } from \"react\";\r\nimport { Cartesian3 } from \"cesium\";\r\nimport { Viewer, Entity, Camera, CameraFlyTo, Act } from \"resium\";\r\nconst position = Cartesian3.fromDegrees(-74.0707383, 40.7117244, 100);\r\nconst pointGraphics = { pixelSize: 10 };\r\n\r\nclass Camera1 extends Component {\r\n    render(){\r\n        return(\r\n            <Viewer full>\r\n                <Camera\r\n                    onChange={ (areaPercentage)=> console.log(areaPercentage)}\r\n                />\r\n                <CameraFlyTo duration={5} destination={Cartesian3.fromDegrees(126.948788, 37.374388, 100)} />\r\n\r\n\r\n                <Entity\r\n                    name=\"Korea\"\r\n                    position={Cartesian3.fromDegrees(126.948788, 37.374388, 100)}\r\n                    point={{ pixelSize: 10 }}\r\n                    description=\"IT GOOD\"\r\n                />\r\n            </Viewer>\r\n        )\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Camera1\r\n","import DeckTest from '../components/deckGl/test'\r\nimport HexagonLayerCom from \"../components/deckGl/hexagonLayer\";\r\nimport Camera1 from \"../components/resium/camera\"\r\nimport React from \"react\"\r\n\r\nconst deckRoutes =  {\r\n    deckGL : [\r\n        {\r\n            path: '/deckGL/lineLayer',\r\n            name: 'lineLayer',\r\n            component : DeckTest\r\n        },\r\n        {\r\n            path: '/deckGL/hexagonLayer',\r\n            name: 'hexagonLayer',\r\n\r\n\r\n            // eslint-disable-next-line react/react-in-jsx-scope\r\n            component : () => <HexagonLayerCom/>\r\n        },\r\n\r\n    ],\r\n    resium : [\r\n        {\r\n            path: '/resium/basic',\r\n            name: 'basic',\r\n            component : () => <Camera1/>\r\n        },\r\n        {\r\n            path: '/resium/2',\r\n            name: '2',\r\n\r\n\r\n            // eslint-disable-next-line react/react-in-jsx-scope\r\n          //  component : () => <HexagonLayerCom/>\r\n        },\r\n\r\n    ],\r\n\r\n}\r\n\r\nexport default deckRoutes\r\n\r\n\r\n","import React from \"react\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Left = ({routes}) =>{\r\n\r\n    console.log(routes)\r\n\r\n    return (\r\n        <div className='toc open'>\r\n            <div>\r\n                {routes.map((route,idx) =>\r\n                    <NavLink className='list-header expanded' activeClassName=\"active\" key={`group-header${idx}`} to={route.path}>\r\n                        {route.name}\r\n                    </NavLink>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Left\r\n","import React, {Component} from \"react\";\r\nimport deckGlRoutes from \"../routes/deckRoute\"\r\nimport Left from \"../components/layouts/left\";\r\n\r\n\r\n/*\r\n* Container 란 재사용성이 가능한 코드 React 의 HOF 를 고려?\r\n* -> Container pattern 에 대해서 고민\r\n*\r\n*\r\n* */\r\n\r\nclass PageContainer extends Component{\r\n\r\n\r\n    render() {\r\n        const {params, path} = this.props.match\r\n        const key = path.split('/')[1]\r\n        console.log(this.props,deckGlRoutes,'!!', key, )\r\n        const routes = deckGlRoutes[key]\r\n        const findComponent = routes.find(route =>route.name===params.param)\r\n        //console.log(findComponent.component())\r\n        return (\r\n            <div className=\"gallery-wrapper\">\r\n                <div className=\"fullheight\">\r\n                    <div className=\"flexbox--row\">\r\n                        <div className=\"flexbox-item\" style={{zIndex: 1}}>\r\n                            <Left routes={routes}/>\r\n                        </div>\r\n                        <div className={'flexbox-item flexbox-item--fill'}>\r\n                            {/*<HexagonLayerCom2/>*/}\r\n                            {findComponent && findComponent.component()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default PageContainer\r\n","import React, {Component} from \"react\"\r\nimport headerRoutes  from \"../routes\";\r\nimport Header from './layouts/header'\r\nimport {Redirect, Route, Switch} from \"react-router\";\r\nimport '../stylesheets/main.scss'\r\nimport PageContainer from \"../containers/pageContainer\";\r\nimport Camera from \"./resium/camera\";\r\n\r\nclass Main extends Component{\r\n\r\n\r\n\r\n    //TODO 힘내보자 화이팅\r\n    renderHeaderRoutes = () => {\r\n        console.log(this.props)\r\n        return (\r\n            <Switch>\r\n\r\n\r\n                {\r\n                    headerRoutes.map(route => (\r\n                    <Route path={route.path} key={route.name} component={PageContainer} />\r\n                ))\r\n                }\r\n                {console.log('redirect?')}\r\n                <Redirect to='/DeckGL/lineLayer'/>\r\n\r\n            </Switch>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {/*<Camera></Camera>*/}\r\n                <Header routes={headerRoutes}/>\r\n                {this.renderHeaderRoutes()}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Main\r\n\r\n","import {createAction, handleActions} from 'redux-actions'\r\n\r\nconst REUDX_TEST = 'test/REDUX_TEST'\r\n\r\nexport const testAction = createAction(REUDX_TEST, payload => payload)\r\nconst initialState = {\r\n\r\n}\r\n\r\nexport default handleActions(\r\n    {\r\n        [REUDX_TEST] : (state, action) =>{\r\n            console.log('reducer ')\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n    },\r\n    initialState\r\n)\r\n","import {combineReducers} from \"redux\"\r\nimport test from \"./test\";\r\n\r\n// 등록한 reducer 합쳐서  export -> configure.js 로\r\n\r\nexport default combineReducers({\r\n    test\r\n})\r\n\r\n\r\n\r\n\r\n\r\n","import { call, put, fork, takeEvery, take, select } from 'redux-saga/effects'\r\nimport {testAction} from '../modules'\r\n\r\n\r\nconst sagaTest = function* () {\r\n    while (true) {\r\n        console.log('saga test')\r\n        const test = yield take('test/REDUX_TEST')\r\n    }\r\n}\r\n\r\n\r\nexport function* test() {\r\n    yield fork(sagaTest)\r\n}\r\n\r\n\r\n\r\n","import {all} from 'redux-saga/effects'\r\nimport {test} from './test'\r\n\r\nexport default function* rootSagas() {\r\n    yield all([test()])\r\n}\r\n","import {applyMiddleware, createStore, compose} from 'redux'\r\nimport modules from './modules'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSagas from \"./sagas\";\r\n/*\r\n    configure.js\r\n    redux, reducer 등 미들 웨어 설정을 담당\r\n\r\n */\r\n\r\nconst configure = () => {\r\n    // saga 등록\r\n    const sagaMiddleware = createSagaMiddleware()\r\n\r\n    // chrome redux 개발자 도구를 사용 가능하게\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n    const store = createStore(modules, composeEnhancers(applyMiddleware(sagaMiddleware)))\r\n    //  param reducer , middleware...\r\n\r\n    //saga start\r\n    sagaMiddleware.run(rootSagas)\r\n\r\n    return store\r\n}\r\n\r\nexport default configure\r\n\r\n","import configure from \"./configure\";\r\n\r\nexport default configure()\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from \"react-redux\"\nimport {BrowserRouter} from 'react-router-dom'\nimport {Route} from 'react-router'\nimport Main from './components/main'\nimport store from './store'\n\n\nReactDOM.render(\n    // redux 를 사용하기 위해서 추가입니다\n    <Provider store={store}>\n        <BrowserRouter> {/*headerRoute 사용*/}\n            <Route path='/' component={Main} />\n        </BrowserRouter>\n    </Provider>\n    ,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}